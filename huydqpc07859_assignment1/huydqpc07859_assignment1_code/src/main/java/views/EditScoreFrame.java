/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import models.Role;
import models.Student;
import models.UserApplication;
import repositories.StudentRepository;
import services.StudentService;
import utils.SaveImgUtil;

/**
 *
 * @author dinhh
 */
public class EditScoreFrame extends javax.swing.JFrame {

    StudentService service = StudentService.getInstance();
    UserApplication user = null;
    private File selectedFile = null;
    LineBorder redBorder = new LineBorder(Color.RED, 1);
    LineBorder grayBorder = new LineBorder(Color.gray, 1);
    private StudentManagement sm = null;
    private Student std = null;
    private ViewDetail viewDetail = null;

    /**
     * Creates new form AddFrame
     */
    public EditScoreFrame() {
        initComponents();
        start(null);
    }

    public EditScoreFrame(UserApplication user, StudentManagement sm, ViewDetail viewDetail, Student std) {
        initComponents();
        this.sm = sm;
        this.std = std;
        this.viewDetail = viewDetail;
        start(user);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtEn = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        txtIT = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPE = new javax.swing.JTextField();
        btnAdd1 = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        lblImage = new javax.swing.JLabel();

        jLabel6.setText("jLabel6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 255));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel2.setText("Id:");

        txtId.setEditable(false);
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdKeyTyped(evt);
            }
        });

        jLabel3.setText("English");

        txtEn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnActionPerformed(evt);
            }
        });
        txtEn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEnKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEnKeyTyped(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Viner Hand ITC", 0, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 102, 0));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Update Score");

        jLabel4.setText("Information Technology");

        txtIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtITActionPerformed(evt);
            }
        });
        txtIT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtITKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtITKeyTyped(evt);
            }
        });

        jLabel5.setText("Physical Education");

        txtPE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPEActionPerformed(evt);
            }
        });
        txtPE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPEKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPEKeyTyped(evt);
            }
        });

        btnAdd1.setBackground(new java.awt.Color(204, 204, 204));
        btnAdd1.setForeground(new java.awt.Color(102, 102, 102));
        btnAdd1.setText("Cancel");
        btnAdd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdd1ActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(0, 153, 0));
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/save.png"))); // NOI18N
        btnAdd.setText("Update");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImage.setText("???");
        lblImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblImage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImageMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEn, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIT, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(136, 136, 136))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(txtPE, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(132, 132, 132))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIT, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPE, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImageMouseClicked
        // TODO add your handling code here:
//        showInputFile();
    }//GEN-LAST:event_lblImageMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        validateStudent();
    }//GEN-LAST:event_btnAddActionPerformed

    private void txtIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyTyped
        // TODO add your handling code here:
        if (Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txtIdKeyTyped

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void txtIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyPressed
        // TODO add your handling code here:
        txtId.setBorder(grayBorder);

    }//GEN-LAST:event_txtIdKeyPressed

    private void txtITKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtITKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '.') {
            evt.consume();
        }
    }//GEN-LAST:event_txtITKeyTyped

    private void txtITKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtITKeyPressed
        // TODO add your handling code here:
        txtIT.setBorder(grayBorder);
    }//GEN-LAST:event_txtITKeyPressed

    private void txtITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtITActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtITActionPerformed

    private void txtEnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEnKeyPressed
        // TODO add your handling code here:
        txtEn.setBorder(grayBorder);
    }//GEN-LAST:event_txtEnKeyPressed

    private void txtEnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEnActionPerformed

    private void txtPEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPEActionPerformed

    private void txtPEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPEKeyPressed
        // TODO add your handling code here:  
        txtPE.setBorder(grayBorder);
    }//GEN-LAST:event_txtPEKeyPressed

    private void txtPEKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPEKeyTyped
        // TODO add your handling code here:
          if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '.') {
            evt.consume();
        }
    }//GEN-LAST:event_txtPEKeyTyped

    private void btnAdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdd1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnAdd1ActionPerformed

    private void txtEnKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEnKeyTyped
        // TODO add your handling code here:
          if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '.') {
            evt.consume();
        }
    }//GEN-LAST:event_txtEnKeyTyped

    private void validateStudent() {
        String fullName = txtId.getText();
        String en = txtEn.getText();
        String it = txtIT.getText();
        String pe = txtPE.getText();

        String error = "";

        if (pe.isEmpty()) {
            error += "Physical education is not empty\n";
            txtPE.setBorder(redBorder);
            txtPE.requestFocus();
        }

        if (it.isEmpty()) {
            error += "IT is not empty\n";
            txtIT.setBorder(redBorder);
            txtIT.requestFocus();
        }

        if (en.isEmpty()) {
            error += "English is not empty\n";
            txtEn.setBorder(redBorder);
            txtEn.requestFocus();

        }

        if (!error.isEmpty()) {
            showError(error);
            return;
        }
        try {
            double parsePE = Double.parseDouble(pe);
            if (parsePE < 0 || parsePE > 10) {
                error += "Physical education score must between from 0 to 10\n";
                txtPE.setBorder(redBorder);
                txtPE.requestFocus();
            }
        } catch (Exception e) {
            error += "Physical score must be numbers";
            txtPE.setBorder(redBorder);
            txtPE.requestFocus();
        }

        try {
            double parseIT = Double.parseDouble(it);
            if (parseIT < 0 || parseIT > 10) {
                error += "IT score must between from 0 to 10\n";
                txtIT.setBorder(redBorder);
                txtIT.requestFocus();
            }
        } catch (Exception e) {
            error += "IT score must be numbers";
            txtIT.setBorder(redBorder);
            txtIT.requestFocus();
        }

        try {
            double parseEN = Double.parseDouble(en);
            if (parseEN < 0 || parseEN > 10) {
                error += "English score must between from 0 to 10\n";
                txtEn.setBorder(redBorder);
                txtEn.requestFocus();
            }
        } catch (Exception e) {
            error += "English score must be numbers";
            txtEn.setBorder(redBorder);
            txtEn.requestFocus();
        }

        if (!error.isEmpty()) {
            showError(error);
            return;
        }

        std.setEnglish(Double.valueOf(en));
        std.setTech(Double.valueOf(it));
        std.setPhysicalEducation(Double.valueOf(pe));

        if (service.updateMarks(user, std)) {
            showSuccess("Updated score successfully");
            this.sm.updateAllTable();
            this.viewDetail.updateViewDetail(std);
            this.dispose();
        } else {
            showError("Updating score failed");
        }
    }

    private void showSuccess(String mess) {
        JOptionPane.showMessageDialog(this, mess, "Information", JOptionPane.INFORMATION_MESSAGE);
    }

    private boolean containsNumber(String input) {
        Pattern pattern = Pattern.compile(".*\\d.*");
        Matcher matcher = pattern.matcher(input);
        return matcher.matches();
    }

    private boolean isValidEmail(String email) {
        Pattern pattern = Pattern.compile("^[A-Za-z0-9+_.-]+@(.+)$");
        Matcher matcher = pattern.matcher(email);
        return matcher.matches();
    }

    private boolean isValidPhoneNumber(String phoneNumber) {
        Pattern pattern = Pattern.compile("0[0-9]{9,10}");
        Matcher matcher = pattern.matcher(phoneNumber);
        return matcher.matches();
    }

    private File showInputFile() {
        JFileChooser fc = new JFileChooser();

        int returnValue = fc.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fc.getSelectedFile();
            String fileName = fileExtension(selectedFile.getName());
            if (!fileName.equals("png") && !fileName.equals("jpg")) {
                showError("Please select image file");
                return null;
            }

            try {
                BufferedImage img = ImageIO.read(selectedFile);
                lblImage.setText("");
                int w = lblImage.getWidth();
                int h = lblImage.getHeight();
                lblImage.setIcon(new ImageIcon(img.getScaledInstance(w, h, 0)));
                return this.selectedFile = selectedFile;
            } catch (IOException ex) {
                Logger.getLogger(EditScoreFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        return null;
    }

    private String saveImageToDatabase(File selectedFile) {
        BufferedImage img;
        if (selectedFile == null) {
            return "avatar.jpg";
        }
        try {
            img = ImageIO.read(selectedFile);
            String fileNameRandom = SaveImgUtil.generateRandomFileName(selectedFile != null ? selectedFile.getAbsolutePath() : null);
            boolean success = SaveImgUtil.saveImageToResources(img, fileNameRandom);
            if (success) {
                return fileNameRandom;
            }
        } catch (IOException ex) {
            Logger.getLogger(EditScoreFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        return "avatar.jpg";
    }

    private void showError(String mess) {
        JOptionPane.showMessageDialog(this, mess, "Error", JOptionPane.ERROR_MESSAGE);
    }

    private String fileExtension(String fileName) {

        int dotIndex = fileName.lastIndexOf('.');
        String extension = "";
        if (dotIndex > 0 && dotIndex < fileName.length() - 1) {
            extension = fileName.substring(dotIndex + 1);

            System.out.println("Extension của tệp tin: " + extension);
        }

        return extension;

    }

    public void start(UserApplication user) {
        if (user == null) {
            this.setVisible(false);
            LoginFrame login = new LoginFrame();
            login.start();
            return;
        }
        if (!user.getRole().equals(Role.Teacher)) {
            this.dispose();
            return;
        }
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        this.txtId.requestFocus();
        this.user = user;
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        renderInfo();
    }

    private void renderInfo() {
        if (std != null) {
            txtId.setText(std.getId());
            txtEn.setText(std.getEnglish() + "");
            txtIT.setText(std.getTech() + "");
            txtPE.setText(std.getPhysicalEducation() + "");

            BufferedImage image = SaveImgUtil.loadImageFromResources(std.getImage());
            int w = lblImage.getWidth();
            int h = lblImage.getHeight();
            if (image != null) {
                this.lblImage.setIcon(new ImageIcon(image.getScaledInstance(w, h, 0)));
            } else {
                lblImage.setText("Image not found");
            }
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditScoreFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditScoreFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditScoreFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditScoreFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditScoreFrame();
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAdd1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtEn;
    private javax.swing.JTextField txtIT;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtPE;
    // End of variables declaration//GEN-END:variables
}
